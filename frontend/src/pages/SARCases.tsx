import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import { Plus, Search, Filter, FileText } from 'lucide-react';
import axios from 'axios';
import toast from 'react-hot-toast';

interface SARCase {
  id: number;
  case_reference: string;
  organization_name: string;
  status: string;
  submission_date: string;
  statutory_deadline: string;
  created_at: string;
}

const SARCases: React.FC = () => {
  const [cases, setCases] = useState<SARCase[]>([]);
  const [loading, setLoading] = useState(true);
  const [searchTerm, setSearchTerm] = useState('');
  const [statusFilter, setStatusFilter] = useState('');

  useEffect(() => {
    fetchCases();
  }, []);

  const fetchCases = async () => {
    try {
      setLoading(true);
      const response = await axios.get('/sar/');
      setCases(response.data);
    } catch (error) {
      console.error('Error fetching cases:', error);
      toast.error('Failed to load cases');
    } finally {
      setLoading(false);
    }
  };

  const generateSARLetter = async (caseItem: SARCase) => {
    try {
      // For now, we'll create a simple text-based SAR letter
      // In the future, this could call a backend endpoint to generate a PDF
      
      const letterContent = `SUBJECT ACCESS REQUEST

Date: ${new Date().toLocaleDateString()}

To: ${caseItem.organization_name}
Case Reference: ${caseItem.case_reference}

Dear Sir/Madam,

I am writing to make a formal Subject Access Request (SAR) under the Data Protection Act 2018 and UK GDPR Article 15.

I hereby request that you provide me with the following information:

1. Confirmation that you are processing my personal data
2. The legal basis for processing my personal data
3. The categories of personal data you hold about me
4. The source of the personal data
5. The purposes for which the data is being processed
6. Any third parties with whom you share my personal data
7. The retention period for my personal data
8. My rights under data protection law
9. Any automated decision-making processes
10. A copy of my personal data in a structured, commonly used format

This request is made under Article 15 of the UK GDPR and Section 45 of the Data Protection Act 2018. You are required to respond to this request within one calendar month of receipt.

If you require additional information to identify me or locate the relevant data, please contact me immediately.

I look forward to receiving your response within the statutory timeframe.

Yours faithfully,
[Your Name]

---
Generated by SAR Tracking System
Case: ${caseItem.case_reference}
Date: ${new Date().toLocaleDateString()}`;

      // Create and download the text file
      const blob = new Blob([letterContent], { type: 'text/plain' });
      const url = window.URL.createObjectURL(blob);
      const link = document.createElement('a');
      link.href = url;
      link.setAttribute('download', `SAR-Letter-${caseItem.case_reference}.txt`);
      document.body.appendChild(link);
      link.click();
      link.remove();
      window.URL.revokeObjectURL(url);

      toast.success('SAR Letter generated successfully');
    } catch (error) {
      console.error('Error generating SAR letter:', error);
      toast.error('Failed to generate SAR letter');
    }
  };

  const getStatusColor = (status: string) => {
    switch (status.toLowerCase()) {
      case 'pending':
        return 'status-pending';
      case 'overdue':
        return 'status-overdue';
      case 'complete':
        return 'status-complete';
      case 'responded':
        return 'status-responded';
      case 'escalated':
        return 'status-escalated';
      default:
        return 'status-pending';
    }
  };

  const filteredCases = cases.filter(caseItem => {
    const matchesSearch = caseItem.organization_name.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         caseItem.case_reference.toLowerCase().includes(searchTerm.toLowerCase());
    const matchesStatus = !statusFilter || caseItem.status.toLowerCase() === statusFilter.toLowerCase();
    return matchesSearch && matchesStatus;
  });

  if (loading) {
    return (
      <div className="flex items-center justify-center h-64">
        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600"></div>
      </div>
    );
  }

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-2xl font-bold text-gray-900">SAR Cases</h1>
          <p className="text-gray-600 mt-1">Manage your Subject Access Request cases</p>
        </div>
        <Link
          to="/cases/new"
          className="btn-primary flex items-center"
        >
          <Plus className="w-4 h-4 mr-2" />
          New Case
        </Link>
      </div>

      {/* Filters */}
      <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-4">
        <div className="flex flex-col sm:flex-row gap-4">
          <div className="flex-1">
            <label htmlFor="search" className="sr-only">Search cases</label>
            <div className="relative">
              <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <Search className="h-5 w-5 text-gray-400" />
              </div>
              <input
                id="search"
                type="text"
                className="input pl-10"
                placeholder="Search by organization or case reference..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
              />
            </div>
          </div>
          <div className="sm:w-48">
            <label htmlFor="status-filter" className="sr-only">Filter by status</label>
            <select
              id="status-filter"
              className="input"
              value={statusFilter}
              onChange={(e) => setStatusFilter(e.target.value)}
            >
              <option value="">All Statuses</option>
              <option value="pending">Pending</option>
              <option value="overdue">Overdue</option>
              <option value="responded">Responded</option>
              <option value="complete">Complete</option>
              <option value="escalated">Escalated</option>
            </select>
          </div>
        </div>
      </div>

      {/* Cases List */}
      <div className="bg-white rounded-lg shadow-sm border border-gray-200">
        {filteredCases.length === 0 ? (
          <div className="text-center py-12">
            <div className="mx-auto h-12 w-12 text-gray-400">
              <Filter className="h-12 w-12" />
            </div>
            <h3 className="mt-2 text-sm font-medium text-gray-900">No cases found</h3>
            <p className="mt-1 text-sm text-gray-500">
              {cases.length === 0 
                ? "Get started by creating your first SAR case."
                : "Try adjusting your search or filter criteria."
              }
            </p>
            {cases.length === 0 && (
              <div className="mt-6">
                <Link
                  to="/cases/new"
                  className="btn-primary"
                >
                  <Plus className="w-4 h-4 mr-2" />
                  Create First Case
                </Link>
              </div>
            )}
          </div>
        ) : (
          <div className="overflow-hidden">
            <table className="min-w-full divide-y divide-gray-200">
              <thead className="bg-gray-50">
                <tr>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Case Reference
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Organization
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Status
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Submission Date
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Deadline
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Actions
                  </th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-200">
                {filteredCases.map((caseItem) => (
                  <tr key={caseItem.id} className="hover:bg-gray-50">
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="text-sm font-medium text-gray-900">
                        {caseItem.case_reference}
                      </div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="text-sm text-gray-900">
                        {caseItem.organization_name}
                      </div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <span className={`status-badge ${getStatusColor(caseItem.status)}`}>
                        {caseItem.status}
                      </span>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                      {new Date(caseItem.submission_date).toLocaleDateString()}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                      {new Date(caseItem.statutory_deadline).toLocaleDateString()}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm font-medium">
                      <div className="flex space-x-3">
                        <Link
                          to={`/cases/${caseItem.id}`}
                          className="text-primary-600 hover:text-primary-900"
                        >
                          View Details
                        </Link>
                        <button
                          onClick={() => generateSARLetter(caseItem)}
                          className="text-blue-600 hover:text-blue-900 flex items-center"
                        >
                          <FileText className="w-4 h-4 mr-1" />
                          Generate SAR Letter
                        </button>
                      </div>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        )}
      </div>
    </div>
  );
};

export default SARCases;
